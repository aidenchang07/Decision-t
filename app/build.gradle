apply plugin: 'com.android.application'

// Firebase Fabric plugin.
apply plugin: 'io.fabric'

android {
    compileSdkVersion 29
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.decision_t"

        /**
         * minSdkVersion：最小的支援版本
         * 原數值為API 19(Android 4.4 KitKat)，改為API 21(Android 5.0-5.0.2 Lollipop)可讓建構速度提高，
         * 但實際要發佈正式版APK時，要把數值改回原本的API 19(好讓Android 4.4 KitKat的用戶可以在Google Play下載我們的App)。
         */
        minSdkVersion 19

        /**
         * targetSdkVersion：這個版本是可以正確執行的
         */
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        /**
         * Enabling multidex support.(突破64K限制，也就是dex突破65535個Function的限制)
         */
        multiDexEnabled false
    }
    // Specifies one flavor dimension.
    flavorDimensions "origin"
    productFlavors {
        dev {
            dimension "origin"
            applicationId "com.decision_t"

            minSdkVersion 21
            versionCode 2
        }
        prod {
            dimension "origin"
            applicationId "com.decision_t"

            minSdkVersion 19
            multiDexEnabled false
        }
    }


    buildTypes {
        debug {
            /**
             * 設置為false(關閉混淆)，因為是內部測試，所以可關閉
             */
            minifyEnabled false

            /**
             * 設置為false，關閉去除無效的資源(resource)文件
             * 注意：此功能依賴於minifyEnabled，要使用時，minifyEnabled必須設置為true
             */
            shrinkResources false
        }
        release {
            /**
             * 設置為true(開啟混淆)，因此為公佈版本，要用來防止程式碼被反編譯
             */
            minifyEnabled true

            /**
             * 設置為true，開啟去除無效的資源(resource)文件
             * 注意：此功能依賴於minifyEnabled，要使用時，minifyEnabled必須設置為true
             */
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

/**
 * ext準確的說是Gradle領域對象的一個屬性，我們可以將自定義的屬性添加到ext對像上，讓Build.gradle中的其它代碼片段可以使用。
 */
ext {
//    supportLibVersion = '24.2.1'
//    servicesLibVersion = '9.4.0'
//    firebaseLibVersion = '9.4.0'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'

    /**
     * 實感設計的材料
     */
    implementation 'com.google.android.material:material:1.0.0'

    /**
     * 引入Firebase必加
     */
    implementation "com.google.firebase:firebase-core:17.2.3"
    implementation "com.google.firebase:firebase-auth:19.2.0"

    //Firebase的即時資料庫
    implementation "com.google.firebase:firebase-database:19.2.1"

    /**
     * Google登入必用
     */
    implementation "com.google.android.gms:play-services-auth:17.0.0"

    /**
     * FloatingActionButton
     * 因為有需要用到會展開FloatingButton的功能，所以使用此lib
     */
    implementation 'com.github.clans:fab:1.6.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    /**
     * 顯示Google登入圖片用
     */
    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Firebase analytics
    implementation 'com.google.firebase:firebase-analytics:17.2.3'

    // Firebase Crashlytics dependency.
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
}
/**
 * 引入Firebase必加
 */
apply plugin: 'com.google.gms.google-services'
